---
import { languages, type Language } from '../../i18n/config';
import { createLocalizedPath } from '../../i18n/utils';

export interface Props {
  currentLanguage?: Language;
  currentPath?: string;
}

const { currentLanguage = 'ja', currentPath = '/' } = Astro.props;
---

<div class="relative w-full lg:w-auto">
  <select 
    id="language-switcher"
    class="appearance-none bg-white border-2 border-gray-300 rounded-lg px-4 py-3 pr-10 text-base font-medium text-gray-800 hover:border-blue-400 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 cursor-pointer w-full lg:w-auto shadow-sm"
    onchange="handleLanguageChange(this.value)"
  >
    {Object.entries(languages).map(([code, name]) => {
      const localizedPath = createLocalizedPath(currentPath, code as Language);
      const isSelected = code === currentLanguage;
      
      return (
        <option value={localizedPath} selected={isSelected}>
          {name}
        </option>
      );
    })}
  </select>
  
  <!-- Custom dropdown arrow -->
  <div class="absolute inset-y-0 right-0 flex items-center pr-3 pointer-events-none">
    <svg class="w-4 h-4 text-gray-500" fill="none" stroke="currentColor" viewBox="0 0 24 24" stroke-width="2">
      <path stroke-linecap="round" stroke-linejoin="round" d="M19 9l-7 7-7-7"></path>
    </svg>
  </div>
</div>

<style>
  #language-switcher {
    /* Remove default browser arrow */
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
  
  /* Ensure proper padding for custom arrow */
  #language-switcher {
    padding-right: 3rem;
  }
</style>

<script is:inline>
  function handleLanguageChange(url) {
    // Close mobile menu if open
    const menuItems = document.getElementById('menu-items');
    const openIcon = document.getElementById('open-icon');
    const closeIcon = document.getElementById('close-icon');
    
    if (menuItems && !menuItems.classList.contains('hidden')) {
      menuItems.classList.add('hidden');
      if (openIcon) openIcon.classList.remove('hidden');
      if (closeIcon) closeIcon.classList.add('hidden');
    }
    
    // Navigate to new language
    window.location.href = url;
  }
</script>